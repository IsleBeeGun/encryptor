{"version":3,"sources":["components/MainHeader/logo.svg","components/MainHeader/MainHeader.jsx","store/store.js","components/Encryptor/Algorithm.js","components/Encryptor/Key/Key.jsx","components/Encryptor/RawText/RawText.jsx","components/Encryptor/EncryptedText/EncryptedText.jsx","components/Encryptor/Encryptor.jsx","components/MainFooter/MainFooter.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","MainHeader","React","Component","render","createElement","className","src","logo","alt","allReducers","combineReducers","key","listOfKeys","arguments","length","undefined","isActive","action","type","payload","rawText","listOfRawTexts","encryptedText","listOfEncryptedTexts","store","createStore","Algorithm","perform","state","getState","dispatch","provideEncryptedTextFromAlgorithm","this","encrypt","provideRawTextFromAlgorithm","decrypt","text","secret","keyToSecret","arrayOfNumbers","textToArrayOfNumbers","encryptedArrayOfNumbers","i","j","push","parseInt","arrayOfNumbersToText","decryptedArrayOfNumbers","subkey","Math","pow","charCodeAt","String","fromCharCode","Key","constructor","props","super","showPassword","handleKeyChange","bind","handleEyeClick","event","provideKey","target","value","setState","eyeIcon","FontAwesomeIcon","icon","faEye","id","aria-hidden","onClick","faEyeSlash","htmlFor","placeholder","onChange","role","href","rel","faGithub","size","data-toggle","data-target","faQuestionCircle","tabIndex","aria-labelledby","data-dismiss","aria-label","connect","storeState","RawText","handleRawTextChange","isDisabled","provideRawText","rows","cols","disabled","EncryptedText","handleEncryptedTextChange","provideEncryptedText","Encryptor","MainFooter","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","Provider","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8caa48dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.88ecec36.svg\";","import React from \"react\";\nimport \"./MainHeader.scss\";\nimport logo from './logo.svg';\n\nclass MainHeader extends React.Component {\n  render() {\n    return (\n      <div className=\"MainHeader\">\n        <div className=\"row\">\n          <img src={logo} alt=\"Encryptor\" className=\"col logo\"/>\n        </div>\n        <header className=\"row justify-content-center sticky-top bg-info\">\n          <h1 className=\"col-fluid shadow-lg bg-dark rounded-pill text-white text-under-logo text-center\">encryptor</h1>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default MainHeader;\n","import { createStore, combineReducers } from \"redux\";\n\n//-------* Constants-types\nconst PROVIDE_KEY = \"PROVIDE_KEY\";\nconst PROVIDE_RAW_TEXT = \"PROVIDE_RAW_TEXT\";\nconst PROVIDE_ENCRYPTED_TEXT = \"PROVIDE_ENCRYPTED_TEXT\";\nconst PROVIDE_RAW_TEXT_FROM_ALGORITHM = \"PROVIDE_RAW_TEXT_FROM_ALGORITHM\";\nconst PROVIDE_ENCRYPTED_TEXT_FROM_ALGORITHM = \"PROVIDE_ENCRYPTED_TEXT_FROM_ALGORITHM\";\n\n//-------* Action creators (people)\nexport const provideKey = key => {\n  return {\n    // This is the action (form)\n    type: PROVIDE_KEY,\n    payload: {\n      key: key,\n      isActive: true\n    }\n  };\n};\n\nexport const provideRawText = rawText => {\n  return {\n    // This is the action (form)\n    type: PROVIDE_RAW_TEXT,\n    payload: {\n      rawText: rawText,\n      isActive: true\n    }\n  };\n};\n\nexport const provideRawTextFromAlgorithm = rawText => {\n  return {\n    // This is the action (form)\n    type: PROVIDE_RAW_TEXT_FROM_ALGORITHM,\n    payload: {\n      rawText: rawText,\n      isActive: false\n    }\n  };\n};\n\nexport const provideEncryptedText = encryptedText => {\n  return {\n    // This is the action (form)\n    type: PROVIDE_ENCRYPTED_TEXT,\n    payload: {\n      encryptedText: encryptedText,\n      isActive: true\n    }\n  };\n};\n\nexport const provideEncryptedTextFromAlgorithm = encryptedText => {\n  return {\n    // This is the action (form)\n    type: PROVIDE_ENCRYPTED_TEXT_FROM_ALGORITHM,\n    payload: {\n      encryptedText: encryptedText,\n      isActive: false\n    }\n  };\n};\n\n//-------* Reducers (departments)\n\nconst key = (listOfKeys = [{ key: \"\", isActive: false }], action) => {\n  if (action.type === PROVIDE_KEY) {\n    return [...listOfKeys, action.payload];\n  } else {\n    listOfKeys = [\n      ...listOfKeys,\n      { key: listOfKeys[listOfKeys.length - 1].key, isActive: false }\n    ]; // I guess here (and below) I screw inmutability\n    return listOfKeys;\n  }\n};\n\nconst rawText = (\n  listOfRawTexts = [{ rawText: \"\", isActive: false }],\n  action\n) => {\n  if ((action.type === PROVIDE_RAW_TEXT)||(action.type === PROVIDE_RAW_TEXT_FROM_ALGORITHM)) {\n    return [...listOfRawTexts, action.payload];\n  } else if (action.type === PROVIDE_ENCRYPTED_TEXT_FROM_ALGORITHM) {\n    listOfRawTexts = [\n      ...listOfRawTexts,\n      {\n        rawText: listOfRawTexts[listOfRawTexts.length - 1].rawText,\n        isActive: true\n      }\n    ];\n    return listOfRawTexts;\n  } else {\n    listOfRawTexts = [\n      ...listOfRawTexts,\n      {\n        rawText: listOfRawTexts[listOfRawTexts.length - 1].rawText,\n        isActive: false\n      }\n    ];\n    return listOfRawTexts;\n  }\n};\n\nconst encryptedText = (\n  listOfEncryptedTexts = [{ encryptedText: \"\", isActive: false }],\n  action\n) => {\n  if ((action.type === PROVIDE_ENCRYPTED_TEXT)||(action.type === PROVIDE_ENCRYPTED_TEXT_FROM_ALGORITHM)) {\n    return [...listOfEncryptedTexts, action.payload];\n  } else if (action.type === PROVIDE_RAW_TEXT_FROM_ALGORITHM) {\n    listOfEncryptedTexts = [\n      ...listOfEncryptedTexts,\n      {\n        encryptedText:\n          listOfEncryptedTexts[listOfEncryptedTexts.length - 1].encryptedText,\n        isActive: true\n      }\n    ];\n    return listOfEncryptedTexts;\n  } else {\n    listOfEncryptedTexts = [\n      ...listOfEncryptedTexts,\n      {\n        encryptedText:\n          listOfEncryptedTexts[listOfEncryptedTexts.length - 1].encryptedText,\n        isActive: false\n      }\n    ];\n    return listOfEncryptedTexts;\n  }\n};\n\n\n//-------* Binding reducers into single unit\nconst allReducers = combineReducers({\n  key: key,\n  rawText: rawText,\n  encryptedText: encryptedText,\n});\n\n//-------* Creating Store\nexport const store = createStore(allReducers);\n\n//dispatch function belongs to store object\n//dispatch function takes that form and automatically\n//sends it to every department\n// store.dispatch(createPolicy(\"Alex\"));\n// store.dispatch(createClaim(\"Alex\", 100));\n// store.dispatch(deletePolicy(\"Alex\"));\n//getState() lets us to access final database, it's current state\n// console.log(store.getState());\n","import { store, provideEncryptedTextFromAlgorithm, provideRawTextFromAlgorithm } from \"../../store/store\";\nconst Algorithm = {\n  perform() {\n    // console.clear();\n    let state = store.getState();\n    \n    // console.log(state);\n    // console.log(`Key field: ${state.key[state.key.length - 1].isActive}`);\n    // console.log(`Raw text field: ${state.rawText[state.rawText.length - 1].isActive}`);\n    // console.log(`Encrypted field: ${state.encryptedText[state.encryptedText.length - 1].isActive}`);\n    \n    // console.log(`%c${state.key[state.key.length - 1].key}`,'color: white; background-color: orange');\n    // console.log(`%c${state.rawText[state.rawText.length - 1].rawText}`,'color: white; background-color: green');\n    // console.log(`%c${state.encryptedText[state.encryptedText.length - 1].encryptedText}`,'color: white; background-color: red');\n\n    if (state.rawText[state.rawText.length - 1].isActive) {\n      store.dispatch( provideEncryptedTextFromAlgorithm( this.encrypt(state.key[state.key.length - 1].key, state.rawText[state.rawText.length - 1].rawText) ) ) ;\n    } else if (state.encryptedText[state.encryptedText.length - 1].isActive) {\n      store.dispatch( provideRawTextFromAlgorithm( this.decrypt(state.key[state.key.length - 1].key, state.encryptedText[state.encryptedText.length - 1].encryptedText) ) );\n    }\n\n    // state = store.getState();\n    // console.log(state);\n    // console.log(`Key field: ${state.key[state.key.length - 1].isActive}`);\n    // console.log(`Raw text field: ${state.rawText[state.rawText.length - 1].isActive}`);\n    // console.log(`Encrypted field: ${state.encryptedText[state.encryptedText.length - 1].isActive}`);\n    \n    // console.log(`%c${state.key[state.key.length - 1].key}`,'color: white; background-color: orange');\n    // console.log(`%c${state.rawText[state.rawText.length - 1].rawText}`,'color: white; background-color: green');\n    // console.log(`%c${state.encryptedText[state.encryptedText.length - 1].encryptedText}`,'color: white; background-color: red');\n  },\n  encrypt(key, text) {\n    if (key === undefined) {    // This code here should be fixed (probably)\n      key = 'password';\n    }\n    if (text === undefined) {\n      text = '_';\n    }\n    let secret = this.keyToSecret(key);\n    let arrayOfNumbers = this.textToArrayOfNumbers(text);\n    let encryptedArrayOfNumbers = [];\n    for (let i=0, j=0; i < arrayOfNumbers.length; i++, j++) {\n      if (j===secret.length) {\n        j = 0;\n      }\n      encryptedArrayOfNumbers.push( parseInt(arrayOfNumbers[i]) + parseInt(secret[j]));\n    }\n    let encryptedText = this.arrayOfNumbersToText(encryptedArrayOfNumbers);\n    return encryptedText;\n  },\n  decrypt(key, text) {\n    if (key === undefined) {    // This code here should be fixed as well (probably)\n      key = 'password';\n    }\n    if (text === undefined) {\n      text = '_';\n    }\n    let secret = this.keyToSecret(key);\n    let arrayOfNumbers = this.textToArrayOfNumbers(text);\n    let decryptedArrayOfNumbers = [];\n    for (let i=0, j=0; i < arrayOfNumbers.length; i++, j++) {\n      if (j===secret.length) {\n        j = 0;\n      }\n      decryptedArrayOfNumbers.push( parseInt(arrayOfNumbers[i]) - parseInt(secret[j]));\n    }\n    let decryptedText = this.arrayOfNumbersToText(decryptedArrayOfNumbers);\n    return decryptedText;\n  },\n  keyToSecret(key) {\n    // Logic here is that we apply subkey to each sybol of key\n    let subkey = Math.pow(key.length, 2); \n    let secret =[];\n    for (let i=0; i < key.length; i++) {\n        secret.push(parseInt(key.charCodeAt(i))+subkey);\n    }\n    return secret;\n  },\n  textToArrayOfNumbers(text) {\n    let arrayOfNumbers = [];\n    for (let i=0; i < text.length; i++) {\n      arrayOfNumbers.push(parseInt(text.charCodeAt(i)));\n    }\n    return arrayOfNumbers;\n  },\n  arrayOfNumbersToText(arrayOfNumbers) {\n    let text = '';\n    for (let i=0; i < arrayOfNumbers.length; i++) {\n      text += String.fromCharCode(parseInt(arrayOfNumbers[i]));\n    }\n    return text;\n  }\n};\n\nexport default Algorithm;\n","import React from \"react\";\nimport \"./Key.scss\";\nimport { store, provideKey } from \"../../../store/store\";\nimport Algorithm from \"../Algorithm\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEye,\n  faEyeSlash,\n  faQuestionCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nclass Key extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: \"password\"\n    };\n    this.handleKeyChange = this.handleKeyChange.bind(this);\n    this.handleEyeClick = this.handleEyeClick.bind(this);\n  }\n  async handleKeyChange(event) {\n    await store.dispatch(provideKey(event.target.value));\n    await Algorithm.perform();\n  }\n  async handleEyeClick() {\n    if (this.state.showPassword === \"password\") {\n      await this.setState({\n        showPassword: \"text\"\n      });\n    } else {\n      await this.setState({\n        showPassword: \"password\"\n      });\n    }\n  }\n  render() {\n    let eyeIcon; // Here icon is changed from faEye to faEyeSlah depending on showPassword state\n    if (this.state.showPassword === \"password\") {\n      eyeIcon = (\n        <FontAwesomeIcon\n          icon={faEye}\n          id=\"eye\"\n          aria-hidden=\"true\"\n          onClick={this.handleEyeClick}\n        />\n      );\n    } else {\n      eyeIcon = (\n        <FontAwesomeIcon\n          icon={faEyeSlash}\n          id=\"eye\"\n          aria-hidden=\"true\"\n          onClick={this.handleEyeClick}\n        />\n      );\n    }\n    return (\n      <div className=\"Key row bg-warning\">\n        <div className=\"col\">\n          <div className=\"form-group\">\n            <label htmlFor=\"password\" className=\"font-weight-bold\">\n              Password\n            </label>\n            <input\n              type={this.state.showPassword}\n              id=\"password\"\n              placeholder=\"Type here..\"\n              onChange={this.handleKeyChange}\n              className=\"form-control\"\n            />\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <p className=\"font-weight-bold\" id=\"spacer\">&nbsp;</p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-fluid\">{eyeIcon}</div>\n            <div className=\"col d-flex flex-row-reverse\">\n              <a\n                role=\"button\"\n                className=\"btn btn-dark btn-lg ml-2\"\n                href=\"https://github.com/IsleBeeGun/encryptor\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon icon={faGithub} size=\"lg\" />\n              </a>\n              <button\n                type=\"button\"\n                data-toggle=\"modal\"\n                data-target=\"#helpModal\"\n                className=\"btn btn-primary btn-lg\"\n              >\n                <FontAwesomeIcon icon={faQuestionCircle} size=\"lg\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        {/* Modal message */}\n        <div\n          className=\"modal fade\"\n          id=\"helpModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"helpModalTitle\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <FontAwesomeIcon icon={faQuestionCircle} size=\"lg\" />\n                <h5 className=\"modal-title ml-2\" id=\"helpModalTitle\">\n                  How does this work?\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <p className=\"bg-warning pl-2 text-black\">\n                  <strong>First of all</strong>, you need to input your secret{\" \"}\n                  <strong>key-word</strong> into the password field.\n                </p>\n                <p>\n                  <strong>Then</strong>, you can either encrypt your text, or\n                  decrypt previously encrypted text.\n                </p>\n                <p className=\"text-success\">\n                  <strong>For encryption:</strong>\n                </p>\n                <p className=\"bg-success pl-2 text-white\">\n                  Place your text into the green area under{\" \"}\n                  <strong>\"Normal Text\"</strong> label, receive encrypted text\n                  in the red area, under{\" \"}\n                  <strong className=\"bg-danger\">\n                    &nbsp;\"Encrypted&nbsp;Text\"&nbsp;\n                  </strong>{\" \"}\n                  label.\n                </p>\n                <p className=\"text-danger\">\n                  <strong>For decryption:</strong>\n                </p>\n                <p className=\"bg-danger pl-2 text-white\">\n                  Place your previously encrypted text into the red area, under{\" \"}\n                  <strong>\"Encrypted Text\"</strong> label, receive decrypted\n                  text in the green area under{\" \"}\n                  <strong className=\"bg-success\">\n                    &nbsp;\"Normal&nbsp;Text\"&nbsp;\n                  </strong>{\" \"}\n                  label.{\" \"}\n                </p>\n                <p className=\"text-info\">\n                  <strong>Also notice:</strong>\n                </p>\n                <p>\n                  You can change your password/key-word anytime you like, but\n                  the changes won't appear immediately. In order to see changes,\n                  you should continue typing inside{\" \"}\n                  <strong className=\"bg-success text-white\">\n                    &nbsp;\"Normal&nbsp;Text\"&nbsp;\n                  </strong>{\" \"}\n                  or{\" \"}\n                  <strong className=\"bg-danger text-white\">\n                    &nbsp;\"Encrypted&nbsp;Text\"&nbsp;\n                  </strong>{\" \"}\n                  field, you'll see your text rearranged by new password shortly\n                  after.{\" \"}\n                </p>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  state => ({\n    storeState: state\n  }),\n  dispatch => ({})\n)(Key);\n","import React from \"react\";\nimport \"./RawText.scss\";\nimport { store, provideRawText } from \"../../../store/store\";\nimport Algorithm from \"../Algorithm\";\nimport { connect } from \"react-redux\";\n\nclass RawText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRawTextChange = this.handleRawTextChange.bind(this);\n    this.isDisabled = this.isDisabled.bind(this);\n  }\n  async handleRawTextChange(event) {\n    await store.dispatch(provideRawText(event.target.value));\n    await Algorithm.perform();\n  }\n  isDisabled() {\n    let state = store.getState();\n    if (state.key[state.key.length - 1].key === '') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  render() {\n    return (\n      <div className=\"RawText col text-white\">\n        <label htmlFor=\"raw-text\" className=\"font-weight-bold\">Normal text</label>\n        <textarea\n          value={\n            this.props.storeState.rawText[\n              this.props.storeState.rawText.length - 1\n            ].rawText\n          }\n          placeholder=\"Type here text you wish to encrypt..\"\n          onChange={this.handleRawTextChange}\n          rows=\"10\"\n          cols=\"36\"\n          className=\"form-control\"\n          id = \"raw-text\"\n          disabled={this.isDisabled()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    storeState: state\n  }),\n  dispatch => ({})\n)(RawText);\n","import React from \"react\";\nimport \"./EncryptedText.scss\";\nimport { store, provideEncryptedText } from \"../../../store/store\";\nimport Algorithm from \"../Algorithm\";\nimport { connect } from \"react-redux\";\n\nclass EncryptedText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleEncryptedTextChange = this.handleEncryptedTextChange.bind(this);\n    this.isDisabled = this.isDisabled.bind(this);\n  }\n  async handleEncryptedTextChange(event) {\n    await store.dispatch(provideEncryptedText(event.target.value));\n    await Algorithm.perform();\n  }\n  isDisabled() {\n    let state = store.getState();\n    if (state.key[state.key.length - 1].key === '') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  render() {\n    return (\n      <div className=\"EncryptedText col text-white\">\n        <label htmlFor=\"encrypted-text\" className=\"font-weight-bold\">Encrypted text</label>\n        <textarea\n          value={\n            this.props.storeState.encryptedText[\n              this.props.storeState.encryptedText.length - 1\n            ].encryptedText\n          }\n          placeholder=\"Here comes the encrypted text..\"\n          onChange={this.handleEncryptedTextChange}\n          rows=\"10\"\n          cols=\"36\"\n          className=\"form-control\"\n          id=\"encrypted-text\"\n          disabled={this.isDisabled()}\n        ></textarea>\n      </div>\n    );\n  }\n}\nexport default connect(\n  state => ({\n    storeState: state\n  }),\n  dispatch => ({})\n)(EncryptedText);\n","import React from \"react\";\nimport \"./Encryptor.scss\";\nimport Key from \"./Key/Key.jsx\";\nimport RawText from \"./RawText/RawText.jsx\";\nimport EncryptedText from \"./EncryptedText/EncryptedText.jsx\";\n\nclass Encryptor extends React.Component {\n  render() {\n    return (\n      <main className=\"Encryptor row\">\n        <div className=\"col\">\n          <Key />\n          <div className=\"row\">\n            <RawText />\n            <EncryptedText />\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\nexport default Encryptor;\n","import React from \"react\";\nimport './MainFooter.scss';\n\nclass MainFooter extends React.Component {\n  render() {\n    return (\n      <footer className=\"MainFooter row\">\n        <div className=\"col bg-dark text-white-50\">\n          <p className=\"text-right h1\">© 2019 IsleBeeGun</p>\n        </div>  \n      </footer>\n    );\n  }\n}\n\nexport default MainFooter;\n","import React from \"react\";\nimport \"./App.scss\";\nimport MainHeader from \"../MainHeader/MainHeader.jsx\";\nimport Encryptor from \"../Encryptor/Encryptor.jsx\";\nimport MainFooter from \"../MainFooter/MainFooter.jsx\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App container shadow-lg\">\n          <MainHeader />\n          <Encryptor />\n          <MainFooter />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\n// import \"./reset.scss\";\nimport \"./index.scss\";\nimport \"bootstrap/scss/bootstrap.scss\";\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport App from \"./components/App/App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}